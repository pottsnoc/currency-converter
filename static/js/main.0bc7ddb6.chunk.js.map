{"version":3,"sources":["helpers/index.js","components/Header/Header.js","components/Header/index.js","actions/index.js","components/Spinner/index.js","components/pages/Home-page.js","components/pages/Converter-page.js","components/App/App.js","services/currency-data-service.js","components/App/index.js","components/Error-Indicator/index.js","components/Error-Indicator/Error-Indicator.js","components/Error-boundary/index.js","reducer.js","store.js","index.js"],"names":["changeBaseCurrency","currencies","target","currentBase","find","item","base","targetBase","charCode","map","Object","objectSpread","value","previous","MenuList","props","react_default","a","createElement","lib_default","style","height","containerRef","ref","innerRef","children","Header","connect","_ref2","options","className","react_select_esm","components","onChange","input","dispatch","result","helpers","localStorage","setItem","type","payload","getOptionLabel","option","getOptionValue","_ref","react_router_dom","to","activeClassName","exact","Spinner","left","top","animationDelay","HomePage","day","Date","toLocaleString","year","month","_this$props","this","items","currency","idx","gap","arrowStyle","key","id","onClick","assign","fav","favs","filter","sort","b","common","concat","toConsumableArray","toggleCurrencyValueFav","aria-hidden","name","toFixed","react_responsive_default","minWidth","matches","React","Component","ConverterPage","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","firstSelected","secondSelected","firstValue","secondValue","cross","setState","updateCross","updateValue","defineProperty","exec","convertCurrency","invert","convertValue","Math","round","_ref3","_this2","_this$state","curr","styles","container","width","e","selectCurrency","step","PureComponent","_ref4","service","CurrencyDataService","_apiBase","fetch","res","ok","Error","status","json","data","transformData","Valute","dictionary","Map","transformedData","values","ID","CharCode","get","Value","Nominal","Previous","push","App","getData","then","edited","editData","catch","err","actions","_localStorage","favList","split","includes","loading","components_Spinner","basename","process","components_Header","react_router","path","component","error","ErrorIndicator","message","ErrorBoundary","components_Error_Indicator","initialState","reducer","arguments","length","undefined","action","store","createStore","ReactDOM","render","es","Error_boundary","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.0bc7ddb6.chunk.js","sourcesContent":["export const changeBaseCurrency = (currencies, target) => {\r\n  const currentBase = currencies.find(item => item.base);\r\n  const targetBase = currencies.find(item => item.charCode === target);\r\n  return currencies.map(item => {\r\n      return {\r\n          ...item,\r\n          value: currentBase.value * item.value / targetBase.value,\r\n          previous: currentBase.previous * item.previous / targetBase.previous,\r\n          base: item === targetBase ? true : null,\r\n      };\r\n  });\r\n}","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport Select from 'react-select';\r\nimport PerfectScrollBar from 'react-perfect-scrollbar';\r\n\r\nimport {changeBaseCurrency} from '../../actions';\r\nimport './header.css';\r\nimport \"react-perfect-scrollbar/dist/css/styles.css\";\r\n\r\nconst Header = (props) => {\r\n    const changeBase = (input) => {\r\n        props.dispatch(changeBaseCurrency(props.currencies, input.charCode));\r\n    }\r\n    const options = props.currencies;\r\n    return(\r\n        <header className='header'>\r\n            <div className='container'>\r\n                <div className='row d-flex align-items-center'>\r\n                    <div className='col-4 col-md-2'>\r\n                        <Select options={options}\r\n                            components={{MenuList}}\r\n                            onChange={changeBase}\r\n                            getOptionLabel={option => option.charCode}\r\n                            getOptionValue={({charCode}) => charCode}\r\n                            value={options.find(item => item.base)}/>\r\n                    </div>\r\n                    <nav className='col-8 col-md-10'>\r\n                        <ul>\r\n                            <li className='header-nav-item'>\r\n                                <NavLink \r\n                                    to='/' \r\n                                    className='header-nav-link' \r\n                                    activeClassName='active' \r\n                                    exact\r\n                                >\r\n                                    Главная\r\n                                </NavLink>\r\n                            </li>\r\n                            <li className='header-nav-item'>\r\n                                <NavLink \r\n                                    to='/converter' \r\n                                    className='header-nav-link' \r\n                                    activeClassName='active' \r\n                                    exact\r\n                                >\r\n                                    Конвертер\r\n                                </NavLink>\r\n                            </li>\r\n                        </ul>\r\n                    </nav>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\nconst MenuList = (props) => {\r\n    return (\r\n            <PerfectScrollBar style={{height: '300px'}} containerRef={ref => props.innerRef(ref)}>\r\n                {props.children}\r\n            </PerfectScrollBar>\r\n\r\n    )\r\n}\r\nconst mapStateToProps = ({currencies}) => ({currencies})\r\nexport default connect(mapStateToProps)(Header);","import Header from './Header';\r\n\r\nexport default Header;","import * as helpers from '../helpers'\r\n\r\nconst currencyRequest = () => {\r\n    return {\r\n        type: 'FETCH_CURRENCIES_REQUEST'\r\n    }\r\n}\r\nconst currencyLoaded = (currencies) => {\r\n    return {\r\n        type: 'FETCH_CURRENCIES_SUCCESS',\r\n        payload: currencies\r\n    }\r\n}\r\nconst currencyFailed = (err) => {\r\n    return {\r\n        type: 'FETCH_CURRENCIES_FAILURE',\r\n        payload: err\r\n    }\r\n}\r\nconst changeBaseCurrency = (currencies, target) => {\r\n    const result = helpers.changeBaseCurrency(currencies, target);\r\n    const targetBase = currencies.find(item => item.charCode === target);\r\n\r\n    localStorage.setItem('base', targetBase.charCode);\r\n    return {\r\n        type: 'EDIT_CURRENCIES',\r\n        payload: result\r\n    }\r\n}\r\nconst toggleCurrencyValueFav = (currencies, charCode) => {\r\n    const result = currencies.map((item) => {\r\n        if(item.charCode === charCode) {\r\n            item = Object.assign({}, item);\r\n            item.fav = item.fav ? false : true; \r\n        }\r\n        return item;\r\n    });\r\n\r\n    const favs = result.filter(a => a.fav)\r\n                       .sort((a, b) => a.charCode > b.charCode ? 1 : -1);\r\n    const common = result.filter(a => !a.fav)\r\n                         .sort((a, b) => a.charCode > b.charCode ? 1 : -1);\r\n    localStorage.setItem('favs', favs.map(item => item.charCode));\r\n    return {\r\n        type: 'EDIT_CURRENCIES',\r\n        payload: [...favs, ...common]\r\n    }\r\n}\r\n\r\nexport {currencyRequest, currencyLoaded, currencyFailed,\r\n        changeBaseCurrency, toggleCurrencyValueFav};","import React from 'react';\r\n\r\nimport './spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return(\r\n        <div className=\"lds-css ng-scope\">\r\n            <div className=\"lds-blocks\">\r\n                <div style={{left:'38px', top:'38px', animationDelay:'0s'}}></div>\r\n                <div style={{left:'80px',top:'38px',animationDelay:'0.125s'}}></div>\r\n                <div style={{left:'122px',top:'38px',animationDelay:'0.25s'}}></div>\r\n                <div style={{left:'38px',top:'80px',animationDelay:'0.875s'}}></div>\r\n                <div style={{left:'122px',top:'80px',animationDelay:'0.375s'}}></div>\r\n                <div style={{left:'38px',top:'122px',animationDelay:'0.75s'}}></div>\r\n                <div style={{left:'80px',top:'122px',animationDelay:'0.625s'}}></div>\r\n                <div style={{left:'122px',top:'122px',animationDelay:'0.5s'}}></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport BreakPoint from 'react-responsive';\r\n\r\nimport {toggleCurrencyValueFav} from '../../actions';\r\nimport './Home-page.css';\r\n\r\nclass HomePage extends React.Component {\r\n    render() {\r\n        const day = new Date().toLocaleString('ru-RU', {year: 'numeric', month: 'long', day: '2-digit'});\r\n        const {dispatch, currencies} = this.props;\r\n        const items = (currency, idx) => {\r\n            if(currency.base) return null;\r\n            const gap = currency.value - currency.previous;\r\n            const arrowStyle = gap > 0 ? 'fa fa-sort-asc' : \r\n                               gap < 0 ? 'fa fa-sort-desc' : 'fa fa-caret-right';\r\n            return (\r\n                <tr key={currency.id}>\r\n                    <td className='button-cell'>\r\n                        <button className='btn btn-info btn-sm'\r\n                                onClick={() => dispatch(toggleCurrencyValueFav(currencies, currency.charCode))}>\r\n                            <i className={`fa ${currency.fav ? 'fa-star' : 'fa-star-o'}`} aria-hidden=\"true\"></i>\r\n                        </button>\r\n                    </td>\r\n                    <td>{currency.charCode}</td>\r\n                    <td>{currency.name}</td>\r\n                    <td>{currency.value.toFixed(2)}</td>\r\n                    <td className='text-right'>\r\n                        <BreakPoint minWidth={768}>\r\n                            <span>{gap.toFixed(4)} </span>\r\n                        </BreakPoint>\r\n                        <i className={arrowStyle} aria-hidden='true'></i> \r\n                    </td>\r\n                </tr>\r\n            )\r\n        }\r\n        return(\r\n            <div className='container'>\r\n                <h1 className='home-page-title'>Курсы валют на {day}</h1>\r\n                <BreakPoint minWidth={768}>\r\n                    {(matches) => {\r\n                          if (matches) {\r\n                            return (\r\n                                <table className='table table-striped table-hover currency-table'>\r\n                                    <tbody>\r\n                                        {currencies.map(items)}\r\n                                    </tbody>\r\n                                </table>\r\n                            );\r\n                          } else {\r\n                            return (\r\n                                <table className='table table-sm table-striped table-hover currency-table'>\r\n                                    <tbody>\r\n                                        {currencies.map(items)}\r\n                                    </tbody>\r\n                                </table>\r\n                            );\r\n                          }\r\n                        }\r\n                    }\r\n                </BreakPoint>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({currencies}) => ({currencies});\r\n\r\nexport default connect(mapStateToProps)(HomePage);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Select from 'react-select';\r\nimport PerfectScrollBar from 'react-perfect-scrollbar';\r\n\r\nimport './ConverterPage.css';\r\n\r\nclass ConverterPage extends React.PureComponent {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            options: [],\r\n            firstSelected: {},\r\n            secondSelected: {},\r\n            firstValue: '',\r\n            secondValue: '',\r\n            cross: 0\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        const options = this.props.currencies;\r\n        const firstSelected = options.find(item => item.base);\r\n        const secondSelected = options.find(item => !item.base);\r\n        \r\n        this.setState({options,\r\n                       firstSelected,\r\n                       secondSelected});\r\n        this.updateCross();\r\n        this.updateValue(firstSelected.value, 'firstValue');\r\n    }\r\n    updateValue(value, target) {\r\n        if(!value || +value < 0) {\r\n            return value ? null : this.setState({[target]: value});\r\n        }\r\n        const regexp = /^-?\\d+[,.]?(\\d{1,2})?/;\r\n        value = regexp.exec(value)[0];\r\n        this.setState({[target]: value});\r\n        this.convertCurrency(target);\r\n    }\r\n    convertCurrency(base) {\r\n        const invert = {firstValue: 'secondValue', secondValue: 'firstValue'};\r\n        this.setState(({cross, [base] : value}) => {\r\n            let convertValue = base === 'firstValue' ?\r\n                               value * cross :\r\n                               value / cross;\r\n            return {[invert[base]]: Math.round(convertValue * 100)/100}\r\n        })\r\n    }\r\n    selectCurrency(option) {\r\n        this.setState(option);\r\n        this.updateCross();\r\n        const base = option.firstSelected ? 'firstValue' : 'secondValue';\r\n        this.convertCurrency(base);\r\n\r\n    }\r\n    updateCross() {\r\n        this.setState(({firstSelected, secondSelected}) => {\r\n            return {cross: firstSelected.value / secondSelected.value};\r\n        })\r\n    }\r\n    render() {\r\n        const {options,\r\n               firstSelected,\r\n               secondSelected,\r\n               firstValue,\r\n               secondValue} = this.state;\r\n        return (\r\n            <div className='container'>\r\n                <div className='jumbotron'>\r\n                    <h1 className='converter-title'>Конвертер валют</h1>\r\n                    <div>{firstValue} {firstSelected.name} равно</div>\r\n                    <div>{secondValue} {secondSelected.name}</div>\r\n                </div>\r\n                <div className='row'>\r\n                    <div className='col-12 col-md-6 mb-3 mb-md-0 d-flex justify-content-between'>\r\n                        <Select options={this.props.currencies}\r\n                                value={firstSelected}\r\n                                getOptionLabel={curr => curr.charCode}\r\n                                getOptionValue={curr => curr.charCode}\r\n                                components={{MenuList}}\r\n                                styles={{container: base => ({...base, width: '48%'})}}\r\n                                onChange={e => this.selectCurrency({firstSelected: e})}/>\r\n                        <input className='converter-text-input' type='number'\r\n                                step='any'\r\n                                value={firstValue}\r\n                                onChange={e => this.updateValue(e.target.value, 'firstValue')}/>\r\n                    </div>\r\n                    <div className='col-12 col-md-6 d-flex justify-content-between flex-row-reverse flex-md-row'>\r\n                        <input className='converter-text-input' type='number'\r\n                                step='any'\r\n                                value={secondValue}\r\n                                onChange={e => this.updateValue(e.target.value, 'secondValue')}/>\r\n                        <Select options={options}\r\n                                value={secondSelected}\r\n                                getOptionLabel={curr => curr.charCode}\r\n                                getOptionValue={curr => curr.charCode}\r\n                                components={{MenuList}}\r\n                                styles={{container: base => ({...base, width: '48%'})}}\r\n                                onChange={e => this.selectCurrency({secondSelected: e})}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst MenuList = (props) => {\r\n    return(\r\n        <PerfectScrollBar style={{height: '200px'}}\r\n                        containerRef={ref => props.innerRef(ref)}>\r\n            {props.children}\r\n        </PerfectScrollBar>\r\n    )\r\n}\r\nconst mapStateToProps = ({currencies}) => ({currencies})\r\nexport default connect(mapStateToProps)(ConverterPage);","import React from 'react';\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nimport Header from '../Header';\r\nimport Spinner from '../Spinner';\r\nimport {HomePage, ConverterPage} from '../pages';\r\nimport * as actions from '../../actions';\r\nimport * as helpers from '../../helpers';\r\nimport CurrencyDataService from '../../services/currency-data-service';\r\n\r\nconst service = new CurrencyDataService();\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        const {dispatch} = this.props;\r\n        dispatch(actions.currencyRequest());\r\n        service.getData()\r\n               .then((data) => {\r\n                    const edited = this.editData(data);\r\n                    dispatch(actions.currencyLoaded(edited));\r\n               })\r\n               .catch((err) => {\r\n                    dispatch(actions.currencyFailed(err));\r\n               });\r\n    }\r\n    editData(data) {\r\n        const {base, favs} = localStorage;\r\n        let result = data;\r\n        if(base) {\r\n            result = helpers.changeBaseCurrency(result, base);\r\n        }\r\n        if(favs) {\r\n            const favList = favs.split(',')\r\n            result = result.map(item => {\r\n                if(favList.includes(item.charCode)) {\r\n                    item.fav = true;\r\n                }\r\n                return item;\r\n            }).sort((a, b) => {\r\n                if(a.fav && b.fav) { \r\n                    return a.charCode > b.charCode ? 1 : -1;\r\n                }\r\n                return a.fav ? -1 : \r\n                       b.fav ? 1 :\r\n                       a.charCode > b.charCode ? 1 : -1;\r\n            })\r\n        }\r\n        return result;\r\n    }\r\n\r\n    render() {\r\n        if(this.props.loading) return <Spinner />;\r\n        return(\r\n            <Router basename={process.env.PUBLIC_URL}>\r\n                <div>\r\n                    <Header />\r\n                    <Switch>\r\n                        <Route path='/' component={HomePage} exact/>\r\n                        <Route path='/converter' component={ConverterPage}/>\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nconst mapStateToProps = ({loading, error, currencies}) => ({loading, error, currencies});\r\nexport default connect(mapStateToProps)(App);","export default class CurrencyDataService {\r\n    constructor() {\r\n        this._apiBase = 'https://www.cbr-xml-daily.ru/daily_json.js';\r\n    }\r\n    async getData() {\r\n        const res = await fetch(this._apiBase);\r\n        if(!res.ok) throw new Error(`Could not fetch data, received ${res.status}`)\r\n        const data = await res.json();\r\n        return this.transformData(data.Valute);\r\n    }\r\n    transformData(data) {\r\n        const dictionary = new Map([\r\n            [\"AUD\", \"Австралийский доллар\"], [\"AZN\", \"Азербайджанский манат\"], [\"USD\", \"Доллар США\"],\r\n            [\"GBP\", \"Фунт стерлингов Соединенного королевства\"], [\"TMT\", \"Новый туркменский манат\"],\r\n            [\"BYN\", \"Белорусский рубль\"], [\"BGN\", \"Болгарский лев\"], [\"BRL\", \"Бразильский реал\"],\r\n            [\"HUF\", \"Венгерский форинт\"], [\"HKD\", \"Гонконгский доллар\"], [\"DKK\", \"Датская крона\"],\r\n            [\"XDR\", \"СДР (специальные права заимствования)\"], [\"EUR\", \"Евро\"], [\"RON\", \"Румынский лей\"],\r\n            [\"CAD\", \"Канадский доллар\"], [\"KGS\", \"Киргизский сом\"], [\"KZT\", \"Казахстанский тенге\"],\r\n            [\"CNY\", \"Китайский юань\"], [\"SGD\", \"Сингапурский доллар\"], [\"ZAR\", \"Южноафриканский рэнд\"],\r\n            [\"MDL\", \"Молдавский лей\"],  [\"INR\", \"Индийская рупия\"], [\"KRW\", \"Вон Республики Корея\"],\r\n            [\"NOK\", \"Норвежская крона\"], [\"AMD\", \"Армянский драм\"], [\"UAH\", \"Украинский гривна\"],\r\n            [\"PLN\", \"Польский злотый\"], [\"CHF\", \"Швейцарский франк\"], [\"SEK\", \"Шведская крона\"],                   \r\n            [\"TJS\", \"Таджикский сомон\"], [\"UZS\", \"Узбекский сум\"], [\"CZK\", \"Чешская крона\"],\r\n            [\"TRY\", \"Турецкая лира\"], [\"JPY\", \"Японская иена\"]\r\n        ]);\r\n        const base = {\r\n            id: 'R00000',\r\n            charCode: 'RUB',\r\n            name: 'Российский рубль',\r\n            value: 1,\r\n            previous: 1,\r\n            base: true,\r\n        };\r\n        const transformedData = Object.values(data).map((item) => {\r\n            return {\r\n                id: item.ID,\r\n                charCode: item.CharCode,\r\n                name: dictionary.get(item.CharCode),\r\n                value: item.Value / item.Nominal,\r\n                previous: item.Previous / item.Nominal,\r\n            }\r\n        });\r\n        transformedData.push(base);\r\n        return transformedData;\r\n    }\r\n}","import App from './App';\r\nexport default App;","import ErrorIndicator from './Error-Indicator';\r\n\r\nexport default ErrorIndicator;","import React from 'react';\r\n\r\nimport './error-indicator.css';\r\n\r\nconst ErrorIndicator = (props) => {\r\n    return (\r\n        <div className=\"error-indicator-frame\">\r\n            <div className='error-indicator'>\r\n                <i className=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>\r\n                <h1>Упс! Что-то пошло не так!</h1>\r\n                <i className='error-code'>({props.error.message})</i>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorIndicator;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport ErrorIndicator from '../Error-Indicator';\r\n\r\nclass ErrorBoundary extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            error: null\r\n        }\r\n    }\r\n    componentDidCatch(error) {\r\n        this.setState({error});\r\n    }\r\n    render() {\r\n        if(this.state.error) return <ErrorIndicator error={this.state.error}/>\r\n        if(this.props.error) return <ErrorIndicator error={this.props.error}/>\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({error}) => ({error});\r\nexport default connect(mapStateToProps)(ErrorBoundary);","const initialState = {\r\n    currencies: [],\r\n    error: false,\r\n    loading: true\r\n}\r\nconst reducer = (state=initialState, action) => {\r\n    switch(action.type) {\r\n        case 'FETCH_CURRENCIES_REQUEST':\r\n            return {\r\n                currencies: [],\r\n                error: false,\r\n                loading: true,\r\n            }\r\n        case 'FETCH_CURRENCIES_SUCCESS':\r\n            return {\r\n                currencies: action.payload,\r\n                error: false,\r\n                loading: false,\r\n            }\r\n        case 'FETCH_CURRENCIES_FAILURE':\r\n            return {\r\n                currencies: [],\r\n                error: action.payload,\r\n                loading: false,\r\n            }\r\n        case 'EDIT_CURRENCIES': {\r\n            return {\r\n                ...state,\r\n                currencies: action.payload\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import {createStore} from 'redux';\r\nimport reducer from './reducer';\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Provider} from 'react-redux';\r\n\r\nimport App from './components/App';\r\nimport ErrorBoundary from './components/Error-boundary';\r\nimport store from './store';\r\n\r\nReactDOM.render(<Provider store={store}>\r\n                    <ErrorBoundary>\r\n                        <App />\r\n                    </ErrorBoundary>\r\n                </Provider>, document.getElementById('root'));"],"sourceRoot":""}