{"version":3,"sources":["actions/index.js","components/Header/Header.js","components/Header/index.js","components/Spinner/index.js","components/pages/Home-page.js","components/pages/Converter-page.js","components/App/App.js","services/currency-data-service.js","components/App/index.js","components/Error-Indicator/index.js","components/Error-Indicator/Error-Indicator.js","components/Error-boundary/index.js","reducer.js","store.js","index.js"],"names":["changeBaseCurrency","currencies","target","currentBase","find","item","base","targetBase","charCode","result","map","Object","objectSpread","value","previous","localStorage","setItem","type","payload","toggleCurrencyValueFav","assign","fav","favs","filter","a","sort","b","common","concat","toConsumableArray","MenuList","props","react_default","createElement","lib_default","style","height","containerRef","ref","innerRef","children","Header","connect","_ref2","options","className","react_select_esm","components","onChange","input","dispatch","styles","container","minWidth","getOptionLabel","option","getOptionValue","_ref","react_router_dom","to","activeClassName","exact","Spinner","left","top","animationDelay","HomePage","day","Date","toLocaleString","year","month","_this$props","this","currency","idx","gap","arrowStyle","key","id","onClick","aria-hidden","name","toFixed","React","Component","ConverterPage","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","firstSelected","secondSelected","firstValue","secondValue","cross","setState","updateCross","updateValue","defineProperty","exec","convertCurrency","invert","convertValue","Math","round","_ref3","_this2","_this$state","curr","width","e","selectCurrency","step","PureComponent","_ref4","service","CurrencyDataService","_apiBase","fetch","res","ok","Error","status","json","data","transformData","Valute","dictionary","Map","transformedData","values","ID","CharCode","get","Value","Nominal","Previous","push","App","getData","then","loadFromLocalStorage","catch","err","actions","_localStorage","split","forEach","loading","components_Spinner","components_Header","react_router","path","component","error","ErrorIndicator","message","ErrorBoundary","components_Error_Indicator","initialState","reducer","arguments","length","undefined","action","store","createStore","ReactDOM","render","es","Error_boundary","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.f022aa46.chunk.js","sourcesContent":["const currencyRequest = () => {\r\n    return {\r\n        type: 'FETCH_CURRENCIES_REQUEST'\r\n    }\r\n}\r\nconst currencyLoaded = (currencies) => {\r\n    return {\r\n        type: 'FETCH_CURRENCIES_SUCCESS',\r\n        payload: currencies\r\n    }\r\n}\r\nconst currencyFailed = (err) => {\r\n    return {\r\n        type: 'FETCH_CURRENCIES_FAILURE',\r\n        payload: err\r\n    }\r\n}\r\nconst changeBaseCurrency = (currencies, target) => {\r\n    const currentBase = currencies.find(item => item.base);\r\n    const targetBase = currencies.find(item => item.charCode === target);\r\n    const result = currencies.map(item => {\r\n        return {\r\n            ...item,\r\n            value: currentBase.value * item.value / targetBase.value,\r\n            previous: currentBase.previous * item.previous / targetBase.previous,\r\n            base: item === targetBase ? true : null,\r\n        };\r\n    });\r\n    localStorage.setItem('base', targetBase.charCode);\r\n    return {\r\n        type: 'EDIT_CURRENCIES',\r\n        payload: result\r\n    }\r\n}\r\nconst toggleCurrencyValueFav = (currencies, charCode) => {\r\n    const result = currencies.map((item) => {\r\n        if(item.charCode === charCode) {\r\n            item = Object.assign({}, item);\r\n            item.fav = item.fav ? null : true; \r\n        }\r\n        return item;\r\n    })\r\n    const favs = result.filter(a => a.fav)\r\n                       .sort((a, b) => a.charCode > b.charCode ? 1 : -1);\r\n    const common = result.filter(a => !a.fav)\r\n                         .sort((a, b) => a.charCode > b.charCode ? 1 : -1);\r\n    localStorage.setItem('favs', favs.map(item => item.charCode));\r\n    return {\r\n        type: 'EDIT_CURRENCIES',\r\n        payload: [...favs, ...common]\r\n    }\r\n}\r\n\r\nexport {currencyRequest, currencyLoaded, currencyFailed,\r\n        changeBaseCurrency, toggleCurrencyValueFav};","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport Select from 'react-select';\r\nimport PerfectScrollBar from 'react-perfect-scrollbar';\r\n\r\nimport {changeBaseCurrency} from '../../actions';\r\nimport './header.css';\r\nimport \"react-perfect-scrollbar/dist/css/styles.css\";\r\n\r\nconst Header = (props) => {\r\n    const changeBase = (input) => {\r\n        props.dispatch(changeBaseCurrency(props.currencies, input.charCode));\r\n    }\r\n    const options = props.currencies;\r\n    return(\r\n        <header className='header'>\r\n            <div className='container d-flex justify-content-between'>\r\n                <Select options={options}\r\n                        components={{MenuList}}\r\n                        onChange={changeBase}\r\n                        styles={{container: base => ({...base, minWidth: '100px'})}} \r\n                        getOptionLabel={option => option.charCode}\r\n                        getOptionValue={({charCode}) => charCode}\r\n                        value={options.find(item => item.base)}/>\r\n                <nav>\r\n                    <ul>\r\n                        <li className='header-nav-item'>\r\n                            <NavLink \r\n                                to='/' \r\n                                className='header-nav-link' \r\n                                activeClassName='active' \r\n                                exact\r\n                            >\r\n                                Главная\r\n                            </NavLink>\r\n                        </li>\r\n                        <li className='header-nav-item'>\r\n                            <NavLink \r\n                                to='/converter' \r\n                                className='header-nav-link' \r\n                                activeClassName='active' \r\n                                exact\r\n                            >\r\n                                Конвертер\r\n                            </NavLink>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\nconst MenuList = (props) => {\r\n    return (\r\n            <PerfectScrollBar style={{height: '300px'}} containerRef={ref => props.innerRef(ref)}>\r\n                {props.children}\r\n            </PerfectScrollBar>\r\n\r\n    )\r\n}\r\nconst mapStateToProps = ({currencies}) => ({currencies})\r\nexport default connect(mapStateToProps)(Header);","import Header from './Header';\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nimport './spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return(\r\n        <div className=\"lds-css ng-scope\">\r\n            <div className=\"lds-blocks\">\r\n                <div style={{left:'38px', top:'38px', animationDelay:'0s'}}></div>\r\n                <div style={{left:'80px',top:'38px',animationDelay:'0.125s'}}></div>\r\n                <div style={{left:'122px',top:'38px',animationDelay:'0.25s'}}></div>\r\n                <div style={{left:'38px',top:'80px',animationDelay:'0.875s'}}></div>\r\n                <div style={{left:'122px',top:'80px',animationDelay:'0.375s'}}></div>\r\n                <div style={{left:'38px',top:'122px',animationDelay:'0.75s'}}></div>\r\n                <div style={{left:'80px',top:'122px',animationDelay:'0.625s'}}></div>\r\n                <div style={{left:'122px',top:'122px',animationDelay:'0.5s'}}></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport {toggleCurrencyValueFav} from '../../actions';\r\nimport './Home-page.css';\r\n\r\nclass HomePage extends React.Component {\r\n    render() {\r\n        const day = new Date().toLocaleString('ru-RU', {year: 'numeric', month: 'long', day: '2-digit'});\r\n        const {dispatch, currencies} = this.props;\r\n        const items = (currency, idx) => {\r\n            if(currency.base) return null;\r\n            const gap = currency.value - currency.previous;\r\n            const arrowStyle = gap > 0 ? 'fa fa-sort-asc' : \r\n                               gap < 0 ? 'fa fa-sort-desc' : 'fa fa-caret-right';\r\n            return (\r\n                <tr key={currency.id}>\r\n                    <td className='button-cell'>\r\n                        <button className='btn btn-info btn-sm'\r\n                                onClick={() => dispatch(toggleCurrencyValueFav(currencies, currency.charCode))}>\r\n                            <i className={`fa ${currency.fav ? 'fa-star' : 'fa-star-o'}`} aria-hidden=\"true\"></i>\r\n                        </button>\r\n                    </td>\r\n                    <td>{currency.charCode}</td>\r\n                    <td>{currency.name}</td>\r\n                    <td>{currency.value.toFixed(2)}</td>\r\n                    <td className='text-right'>\r\n                        <span>{gap.toFixed(4)} </span>\r\n                        <i className={arrowStyle} aria-hidden='true'></i> \r\n                    </td>\r\n                </tr>\r\n            )\r\n        }\r\n        return(\r\n            <div className='container'>\r\n                <h1>Курсы валют на {day}</h1>\r\n                <table className='table table-striped table-hover currency-table'>\r\n                    <tbody>\r\n                        {currencies.map(items)}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({currencies}) => ({currencies});\r\n\r\nexport default connect(mapStateToProps)(HomePage);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Select from 'react-select';\r\nimport PerfectScrollBar from 'react-perfect-scrollbar';\r\n\r\nimport './ConverterPage.css';\r\n\r\nclass ConverterPage extends React.PureComponent {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            options: [],\r\n            firstSelected: {},\r\n            secondSelected: {},\r\n            firstValue: '',\r\n            secondValue: '',\r\n            cross: 0\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        const options = this.props.currencies;\r\n        const firstSelected = options.find(item => item.base);\r\n        const secondSelected = options.find(item => !item.base);\r\n        \r\n        this.setState({options,\r\n                       firstSelected,\r\n                       secondSelected});\r\n        this.updateCross();\r\n        this.updateValue(firstSelected.value, 'firstValue');\r\n    }\r\n    updateValue(value, target) {\r\n        if(!value || +value < 0) {\r\n            return value ? null : this.setState({[target]: value});\r\n        }\r\n        const regexp = /^-?\\d+[,.]?(\\d{1,2})?/;\r\n        value = regexp.exec(value)[0];\r\n        this.setState({[target]: value});\r\n        this.convertCurrency(target);\r\n    }\r\n    convertCurrency(base) {\r\n        const invert = {firstValue: 'secondValue', secondValue: 'firstValue'};\r\n        this.setState(({cross, [base] : value}) => {\r\n            let convertValue = base === 'firstValue' ?\r\n                               value * cross :\r\n                               value / cross;\r\n            return {[invert[base]]: Math.round(convertValue * 100)/100}\r\n        })\r\n    }\r\n    selectCurrency(option) {\r\n        this.setState(option);\r\n        this.updateCross();\r\n        const base = option.firstSelected ? 'firstValue' : 'secondValue';\r\n        this.convertCurrency(base);\r\n\r\n    }\r\n    updateCross() {\r\n        this.setState(({firstSelected, secondSelected}) => {\r\n            return {cross: firstSelected.value / secondSelected.value};\r\n        })\r\n    }\r\n    render() {\r\n        const {options,\r\n               firstSelected,\r\n               secondSelected,\r\n               firstValue,\r\n               secondValue} = this.state;\r\n        return (\r\n            <div className='container'>\r\n                <div className='jumbotron'>\r\n                    <h1>Конвертер валют</h1>\r\n                    <div>{firstValue} {firstSelected.name} равно</div>\r\n                    <div>{secondValue} {secondSelected.name}</div>\r\n                </div>\r\n                <div className='row'>\r\n                    <div className='col-6 d-flex justify-content-between'>\r\n                        <Select options={this.props.currencies}\r\n                                value={firstSelected}\r\n                                getOptionLabel={curr => curr.charCode}\r\n                                getOptionValue={curr => curr.charCode}\r\n                                components={{MenuList}}\r\n                                styles={{container: base => ({...base, width: '48%'})}}\r\n                                onChange={e => this.selectCurrency({firstSelected: e})}/>\r\n                        <input className='converter-text-input' type='number'\r\n                                step='any'\r\n                                value={firstValue}\r\n                                onChange={e => this.updateValue(e.target.value, 'firstValue')}/>\r\n                    </div>\r\n                    <div className='col-6 d-flex justify-content-between'>\r\n                        <input className='converter-text-input' type='number'\r\n                                step='any'\r\n                                value={secondValue}\r\n                                onChange={e => this.updateValue(e.target.value, 'secondValue')}/>\r\n                        <Select options={options}\r\n                                value={secondSelected}\r\n                                getOptionLabel={curr => curr.charCode}\r\n                                getOptionValue={curr => curr.charCode}\r\n                                components={{MenuList}}\r\n                                styles={{container: base => ({...base, width: '48%'})}}\r\n                                onChange={e => this.selectCurrency({secondSelected: e})}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst MenuList = (props) => {\r\n    return(\r\n        <PerfectScrollBar style={{height: '200px'}}\r\n                        containerRef={ref => props.innerRef(ref)}>\r\n            {props.children}\r\n        </PerfectScrollBar>\r\n    )\r\n}\r\nconst mapStateToProps = ({currencies}) => ({currencies})\r\nexport default connect(mapStateToProps)(ConverterPage);","import React from 'react';\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nimport Header from '../Header';\r\nimport Spinner from '../Spinner';\r\nimport {HomePage, ConverterPage} from '../pages';\r\nimport * as actions from '../../actions';\r\nimport CurrencyDataService from '../../services/currency-data-service';\r\n\r\nconst service = new CurrencyDataService();\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        const {dispatch} = this.props;\r\n        dispatch(actions.currencyRequest());\r\n        service.getData()\r\n               .then((data) => {\r\n                    dispatch(actions.currencyLoaded(data));\r\n                    this.loadFromLocalStorage();\r\n               })\r\n               .catch((err) => {\r\n                    dispatch(actions.currencyFailed(err));\r\n               });\r\n    }\r\n    loadFromLocalStorage() {\r\n        const {dispatch, currencies} = this.props;\r\n        const {base, favs} = localStorage;\r\n        if(base) dispatch(actions.changeBaseCurrency(currencies, base));\r\n        if(favs) {\r\n            favs.split(',')\r\n                .forEach(item => {\r\n                    dispatch(actions.toggleCurrencyValueFav(this.props.currencies, item))\r\n                });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if(this.props.loading) return <Spinner />;\r\n        return(\r\n            <Router>\r\n                <div>\r\n                    <Header />\r\n                    <Switch>\r\n                        <Route path='/' component={HomePage} exact/>\r\n                        <Route path='/converter' component={ConverterPage}/>\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nconst mapStateToProps = ({loading, error, currencies}) => ({loading, error, currencies});\r\nexport default connect(mapStateToProps)(App);","export default class CurrencyDataService {\r\n    constructor() {\r\n        this._apiBase = 'https://www.cbr-xml-daily.ru/daily_json.js';\r\n    }\r\n    async getData() {\r\n        const res = await fetch(this._apiBase);\r\n        if(!res.ok) throw new Error(`Could not fetch data, received ${res.status}`)\r\n        const data = await res.json();\r\n        return this.transformData(data.Valute);\r\n    }\r\n    transformData(data) {\r\n        const dictionary = new Map([\r\n            [\"AUD\", \"Австралийский доллар\"], [\"AZN\", \"Азербайджанский манат\"], [\"USD\", \"Доллар США\"],\r\n            [\"GBP\", \"Фунт стерлингов Соединенного королевства\"], [\"TMT\", \"Новый туркменский манат\"],\r\n            [\"BYN\", \"Белорусский рубль\"], [\"BGN\", \"Болгарский лев\"], [\"BRL\", \"Бразильский реал\"],\r\n            [\"HUF\", \"Венгерский форинт\"], [\"HKD\", \"Гонконгский доллар\"], [\"DKK\", \"Датская крона\"],\r\n            [\"XDR\", \"СДР (специальные права заимствования)\"], [\"EUR\", \"Евро\"], [\"RON\", \"Румынский лей\"],\r\n            [\"CAD\", \"Канадский доллар\"], [\"KGS\", \"Киргизский сом\"], [\"KZT\", \"Казахстанский тенге\"],\r\n            [\"CNY\", \"Китайский юань\"], [\"SGD\", \"Сингапурский доллар\"], [\"ZAR\", \"Южноафриканский рэнд\"],\r\n            [\"MDL\", \"Молдавский лей\"],  [\"INR\", \"Индийская рупия\"], [\"KRW\", \"Вон Республики Корея\"],\r\n            [\"NOK\", \"Норвежская крона\"], [\"AMD\", \"Армянский драм\"], [\"UAH\", \"Украинский гривна\"],\r\n            [\"PLN\", \"Польский злотый\"], [\"CHF\", \"Швейцарский франк\"], [\"SEK\", \"Шведская крона\"],                   \r\n            [\"TJS\", \"Таджикский сомон\"], [\"UZS\", \"Узбекский сум\"], [\"CZK\", \"Чешская крона\"],\r\n            [\"TRY\", \"Турецкая лира\"], [\"JPY\", \"Японская иена\"]\r\n        ]);\r\n        const base = {\r\n            id: 'R00000',\r\n            charCode: 'RUB',\r\n            name: 'Российский рубль',\r\n            value: 1,\r\n            previous: 1,\r\n            base: true,\r\n        };\r\n        const transformedData = Object.values(data).map((item) => {\r\n            return {\r\n                id: item.ID,\r\n                charCode: item.CharCode,\r\n                name: dictionary.get(item.CharCode),\r\n                value: item.Value / item.Nominal,\r\n                previous: item.Previous / item.Nominal,\r\n            }\r\n        });\r\n        transformedData.push(base);\r\n        return transformedData;\r\n    }\r\n}","import App from './App';\r\nexport default App;","import ErrorIndicator from './Error-Indicator';\r\n\r\nexport default ErrorIndicator;","import React from 'react';\r\n\r\nimport './error-indicator.css';\r\n\r\nconst ErrorIndicator = (props) => {\r\n    return (\r\n        <div className=\"error-indicator-frame\">\r\n            <div className='error-indicator'>\r\n                <i className=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>\r\n                <h1>Упс! Что-то пошло не так!</h1>\r\n                <i className='error-code'>({props.error.message})</i>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorIndicator;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport ErrorIndicator from '../Error-Indicator';\r\n\r\nclass ErrorBoundary extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            error: null\r\n        }\r\n    }\r\n    componentDidCatch(error) {\r\n        this.setState({error});\r\n    }\r\n    render() {\r\n        if(this.state.error) return <ErrorIndicator error={this.state.error}/>\r\n        if(this.props.error) return <ErrorIndicator error={this.props.error}/>\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({error}) => ({error});\r\nexport default connect(mapStateToProps)(ErrorBoundary);","const initialState = {\r\n    currencies: [],\r\n    error: false,\r\n    loading: true\r\n}\r\nconst reducer = (state=initialState, action) => {\r\n    switch(action.type) {\r\n        case 'FETCH_CURRENCIES_REQUEST':\r\n            return {\r\n                currencies: [],\r\n                error: false,\r\n                loading: true,\r\n            }\r\n        case 'FETCH_CURRENCIES_SUCCESS':\r\n            return {\r\n                currencies: action.payload,\r\n                error: false,\r\n                loading: false,\r\n            }\r\n        case 'FETCH_CURRENCIES_FAILURE':\r\n            return {\r\n                currencies: [],\r\n                error: action.payload,\r\n                loading: false,\r\n            }\r\n        case 'EDIT_CURRENCIES': {\r\n            return {\r\n                ...state,\r\n                currencies: action.payload\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import {createStore} from 'redux';\r\nimport reducer from './reducer';\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\n\nimport App from './components/App';\nimport ErrorBoundary from './components/Error-boundary';\nimport store from './store';\n\nReactDOM.render(<Provider store={store}>\n                    <ErrorBoundary>\n                        <App />\n                    </ErrorBoundary>\n                </Provider>, document.getElementById('root'));"],"sourceRoot":""}