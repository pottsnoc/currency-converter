{"version":3,"sources":["actions/index.js","components/Header/Header.js","components/Header/index.js","components/Spinner/index.js","components/pages/Home-page.js","components/pages/Converter-page.js","components/App/App.js","services/currency-data-service.js","components/App/index.js","components/Error-Indicator/index.js","components/Error-Indicator/Error-Indicator.js","components/Error-boundary/index.js","reducer.js","store.js","index.js"],"names":["changeBaseCurrency","currencies","target","currentBase","find","item","base","targetBase","charCode","result","map","Object","objectSpread","value","previous","localStorage","setItem","type","payload","toggleCurrencyValueFav","assign","fav","favs","filter","a","sort","b","common","concat","toConsumableArray","MenuList","props","react_default","createElement","lib_default","style","height","containerRef","ref","innerRef","children","Header","connect","_ref2","options","className","react_select_esm","components","onChange","input","dispatch","getOptionLabel","option","getOptionValue","_ref","react_router_dom","to","activeClassName","exact","Spinner","left","top","animationDelay","HomePage","day","Date","toLocaleString","year","month","_this$props","this","items","currency","idx","gap","arrowStyle","key","id","onClick","aria-hidden","name","toFixed","react_responsive_default","minWidth","matches","React","Component","ConverterPage","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","firstSelected","secondSelected","firstValue","secondValue","cross","setState","updateCross","updateValue","defineProperty","exec","convertCurrency","invert","convertValue","Math","round","_ref3","_this2","_this$state","curr","styles","container","width","e","selectCurrency","step","PureComponent","_ref4","service","CurrencyDataService","_apiBase","fetch","res","ok","Error","status","json","data","transformData","Valute","dictionary","Map","transformedData","values","ID","CharCode","get","Value","Nominal","Previous","push","App","getData","then","loadFromLocalStorage","catch","err","actions","_localStorage","split","forEach","loading","components_Spinner","basename","process","components_Header","react_router","path","component","error","ErrorIndicator","message","ErrorBoundary","components_Error_Indicator","initialState","reducer","arguments","length","undefined","action","store","createStore","ReactDOM","render","es","Error_boundary","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.9b818705.chunk.js","sourcesContent":["const currencyRequest = () => {\r\n    return {\r\n        type: 'FETCH_CURRENCIES_REQUEST'\r\n    }\r\n}\r\nconst currencyLoaded = (currencies) => {\r\n    return {\r\n        type: 'FETCH_CURRENCIES_SUCCESS',\r\n        payload: currencies\r\n    }\r\n}\r\nconst currencyFailed = (err) => {\r\n    return {\r\n        type: 'FETCH_CURRENCIES_FAILURE',\r\n        payload: err\r\n    }\r\n}\r\nconst changeBaseCurrency = (currencies, target) => {\r\n    const currentBase = currencies.find(item => item.base);\r\n    const targetBase = currencies.find(item => item.charCode === target);\r\n    const result = currencies.map(item => {\r\n        return {\r\n            ...item,\r\n            value: currentBase.value * item.value / targetBase.value,\r\n            previous: currentBase.previous * item.previous / targetBase.previous,\r\n            base: item === targetBase ? true : null,\r\n        };\r\n    });\r\n    localStorage.setItem('base', targetBase.charCode);\r\n    return {\r\n        type: 'EDIT_CURRENCIES',\r\n        payload: result\r\n    }\r\n}\r\nconst toggleCurrencyValueFav = (currencies, charCode) => {\r\n    const result = currencies.map((item) => {\r\n        if(item.charCode === charCode) {\r\n            item = Object.assign({}, item);\r\n            item.fav = item.fav ? null : true; \r\n        }\r\n        return item;\r\n    })\r\n    const favs = result.filter(a => a.fav)\r\n                       .sort((a, b) => a.charCode > b.charCode ? 1 : -1);\r\n    const common = result.filter(a => !a.fav)\r\n                         .sort((a, b) => a.charCode > b.charCode ? 1 : -1);\r\n    localStorage.setItem('favs', favs.map(item => item.charCode));\r\n    return {\r\n        type: 'EDIT_CURRENCIES',\r\n        payload: [...favs, ...common]\r\n    }\r\n}\r\n\r\nexport {currencyRequest, currencyLoaded, currencyFailed,\r\n        changeBaseCurrency, toggleCurrencyValueFav};","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport Select from 'react-select';\r\nimport PerfectScrollBar from 'react-perfect-scrollbar';\r\n\r\nimport {changeBaseCurrency} from '../../actions';\r\nimport './header.css';\r\nimport \"react-perfect-scrollbar/dist/css/styles.css\";\r\n\r\nconst Header = (props) => {\r\n    const changeBase = (input) => {\r\n        props.dispatch(changeBaseCurrency(props.currencies, input.charCode));\r\n    }\r\n    const options = props.currencies;\r\n    return(\r\n        <header className='header'>\r\n            <div className='container'>\r\n                <div className='row d-flex align-items-center'>\r\n                    <div className='col-4 col-md-2'>\r\n                        <Select options={options}\r\n                            components={{MenuList}}\r\n                            onChange={changeBase}\r\n                            getOptionLabel={option => option.charCode}\r\n                            getOptionValue={({charCode}) => charCode}\r\n                            value={options.find(item => item.base)}/>\r\n                    </div>\r\n                    <nav className='col-8 col-md-10'>\r\n                        <ul>\r\n                            <li className='header-nav-item'>\r\n                                <NavLink \r\n                                    to='/' \r\n                                    className='header-nav-link' \r\n                                    activeClassName='active' \r\n                                    exact\r\n                                >\r\n                                    Главная\r\n                                </NavLink>\r\n                            </li>\r\n                            <li className='header-nav-item'>\r\n                                <NavLink \r\n                                    to='/converter' \r\n                                    className='header-nav-link' \r\n                                    activeClassName='active' \r\n                                    exact\r\n                                >\r\n                                    Конвертер\r\n                                </NavLink>\r\n                            </li>\r\n                        </ul>\r\n                    </nav>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\nconst MenuList = (props) => {\r\n    return (\r\n            <PerfectScrollBar style={{height: '300px'}} containerRef={ref => props.innerRef(ref)}>\r\n                {props.children}\r\n            </PerfectScrollBar>\r\n\r\n    )\r\n}\r\nconst mapStateToProps = ({currencies}) => ({currencies})\r\nexport default connect(mapStateToProps)(Header);","import Header from './Header';\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nimport './spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return(\r\n        <div className=\"lds-css ng-scope\">\r\n            <div className=\"lds-blocks\">\r\n                <div style={{left:'38px', top:'38px', animationDelay:'0s'}}></div>\r\n                <div style={{left:'80px',top:'38px',animationDelay:'0.125s'}}></div>\r\n                <div style={{left:'122px',top:'38px',animationDelay:'0.25s'}}></div>\r\n                <div style={{left:'38px',top:'80px',animationDelay:'0.875s'}}></div>\r\n                <div style={{left:'122px',top:'80px',animationDelay:'0.375s'}}></div>\r\n                <div style={{left:'38px',top:'122px',animationDelay:'0.75s'}}></div>\r\n                <div style={{left:'80px',top:'122px',animationDelay:'0.625s'}}></div>\r\n                <div style={{left:'122px',top:'122px',animationDelay:'0.5s'}}></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport BreakPoint from 'react-responsive';\r\n\r\nimport {toggleCurrencyValueFav} from '../../actions';\r\nimport './Home-page.css';\r\n\r\nclass HomePage extends React.Component {\r\n    render() {\r\n        const day = new Date().toLocaleString('ru-RU', {year: 'numeric', month: 'long', day: '2-digit'});\r\n        const {dispatch, currencies} = this.props;\r\n        const items = (currency, idx) => {\r\n            if(currency.base) return null;\r\n            const gap = currency.value - currency.previous;\r\n            const arrowStyle = gap > 0 ? 'fa fa-sort-asc' : \r\n                               gap < 0 ? 'fa fa-sort-desc' : 'fa fa-caret-right';\r\n            return (\r\n                <tr key={currency.id}>\r\n                    <td className='button-cell'>\r\n                        <button className='btn btn-info btn-sm'\r\n                                onClick={() => dispatch(toggleCurrencyValueFav(currencies, currency.charCode))}>\r\n                            <i className={`fa ${currency.fav ? 'fa-star' : 'fa-star-o'}`} aria-hidden=\"true\"></i>\r\n                        </button>\r\n                    </td>\r\n                    <td>{currency.charCode}</td>\r\n                    <td>{currency.name}</td>\r\n                    <td>{currency.value.toFixed(2)}</td>\r\n                    <td className='text-right'>\r\n                        <BreakPoint minWidth={768}>\r\n                            <span>{gap.toFixed(4)} </span>\r\n                        </BreakPoint>\r\n                        <i className={arrowStyle} aria-hidden='true'></i> \r\n                    </td>\r\n                </tr>\r\n            )\r\n        }\r\n        return(\r\n            <div className='container'>\r\n                <h1 className='home-page-title'>Курсы валют на {day}</h1>\r\n                <BreakPoint minWidth={768}>\r\n                    {(matches) => {\r\n                          if (matches) {\r\n                            return (\r\n                                <table className='table table-striped table-hover currency-table'>\r\n                                    <tbody>\r\n                                        {currencies.map(items)}\r\n                                    </tbody>\r\n                                </table>\r\n                            );\r\n                          } else {\r\n                            return (\r\n                                <table className='table table-sm table-striped table-hover currency-table'>\r\n                                    <tbody>\r\n                                        {currencies.map(items)}\r\n                                    </tbody>\r\n                                </table>\r\n                            );\r\n                          }\r\n                        }\r\n                    }\r\n                </BreakPoint>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({currencies}) => ({currencies});\r\n\r\nexport default connect(mapStateToProps)(HomePage);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Select from 'react-select';\r\nimport PerfectScrollBar from 'react-perfect-scrollbar';\r\n\r\nimport './ConverterPage.css';\r\n\r\nclass ConverterPage extends React.PureComponent {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            options: [],\r\n            firstSelected: {},\r\n            secondSelected: {},\r\n            firstValue: '',\r\n            secondValue: '',\r\n            cross: 0\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        const options = this.props.currencies;\r\n        const firstSelected = options.find(item => item.base);\r\n        const secondSelected = options.find(item => !item.base);\r\n        \r\n        this.setState({options,\r\n                       firstSelected,\r\n                       secondSelected});\r\n        this.updateCross();\r\n        this.updateValue(firstSelected.value, 'firstValue');\r\n    }\r\n    updateValue(value, target) {\r\n        if(!value || +value < 0) {\r\n            return value ? null : this.setState({[target]: value});\r\n        }\r\n        const regexp = /^-?\\d+[,.]?(\\d{1,2})?/;\r\n        value = regexp.exec(value)[0];\r\n        this.setState({[target]: value});\r\n        this.convertCurrency(target);\r\n    }\r\n    convertCurrency(base) {\r\n        const invert = {firstValue: 'secondValue', secondValue: 'firstValue'};\r\n        this.setState(({cross, [base] : value}) => {\r\n            let convertValue = base === 'firstValue' ?\r\n                               value * cross :\r\n                               value / cross;\r\n            return {[invert[base]]: Math.round(convertValue * 100)/100}\r\n        })\r\n    }\r\n    selectCurrency(option) {\r\n        this.setState(option);\r\n        this.updateCross();\r\n        const base = option.firstSelected ? 'firstValue' : 'secondValue';\r\n        this.convertCurrency(base);\r\n\r\n    }\r\n    updateCross() {\r\n        this.setState(({firstSelected, secondSelected}) => {\r\n            return {cross: firstSelected.value / secondSelected.value};\r\n        })\r\n    }\r\n    render() {\r\n        const {options,\r\n               firstSelected,\r\n               secondSelected,\r\n               firstValue,\r\n               secondValue} = this.state;\r\n        return (\r\n            <div className='container'>\r\n                <div className='jumbotron'>\r\n                    <h1 className='converter-title'>Конвертер валют</h1>\r\n                    <div>{firstValue} {firstSelected.name} равно</div>\r\n                    <div>{secondValue} {secondSelected.name}</div>\r\n                </div>\r\n                <div className='row'>\r\n                    <div className='col-12 col-md-6 mb-3 mb-md-0 d-flex justify-content-between'>\r\n                        <Select options={this.props.currencies}\r\n                                value={firstSelected}\r\n                                getOptionLabel={curr => curr.charCode}\r\n                                getOptionValue={curr => curr.charCode}\r\n                                components={{MenuList}}\r\n                                styles={{container: base => ({...base, width: '48%'})}}\r\n                                onChange={e => this.selectCurrency({firstSelected: e})}/>\r\n                        <input className='converter-text-input' type='number'\r\n                                step='any'\r\n                                value={firstValue}\r\n                                onChange={e => this.updateValue(e.target.value, 'firstValue')}/>\r\n                    </div>\r\n                    <div className='col-12 col-md-6 d-flex justify-content-between flex-row-reverse flex-md-row'>\r\n                        <input className='converter-text-input' type='number'\r\n                                step='any'\r\n                                value={secondValue}\r\n                                onChange={e => this.updateValue(e.target.value, 'secondValue')}/>\r\n                        <Select options={options}\r\n                                value={secondSelected}\r\n                                getOptionLabel={curr => curr.charCode}\r\n                                getOptionValue={curr => curr.charCode}\r\n                                components={{MenuList}}\r\n                                styles={{container: base => ({...base, width: '48%'})}}\r\n                                onChange={e => this.selectCurrency({secondSelected: e})}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst MenuList = (props) => {\r\n    return(\r\n        <PerfectScrollBar style={{height: '200px'}}\r\n                        containerRef={ref => props.innerRef(ref)}>\r\n            {props.children}\r\n        </PerfectScrollBar>\r\n    )\r\n}\r\nconst mapStateToProps = ({currencies}) => ({currencies})\r\nexport default connect(mapStateToProps)(ConverterPage);","import React from 'react';\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nimport Header from '../Header';\r\nimport Spinner from '../Spinner';\r\nimport {HomePage, ConverterPage} from '../pages';\r\nimport * as actions from '../../actions';\r\nimport CurrencyDataService from '../../services/currency-data-service';\r\n\r\nconst service = new CurrencyDataService();\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        const {dispatch} = this.props;\r\n        dispatch(actions.currencyRequest());\r\n        service.getData()\r\n               .then((data) => {\r\n                    dispatch(actions.currencyLoaded(data));\r\n                    this.loadFromLocalStorage();\r\n               })\r\n               .catch((err) => {\r\n                    dispatch(actions.currencyFailed(err));\r\n               });\r\n    }\r\n    loadFromLocalStorage() {\r\n        const {dispatch, currencies} = this.props;\r\n        const {base, favs} = localStorage;\r\n        if(base) dispatch(actions.changeBaseCurrency(currencies, base));\r\n        if(favs) {\r\n            favs.split(',')\r\n                .forEach(item => {\r\n                    dispatch(actions.toggleCurrencyValueFav(this.props.currencies, item))\r\n                });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if(this.props.loading) return <Spinner />;\r\n        return(\r\n            <Router basename={process.env.PUBLIC_URL}>\r\n                <div>\r\n                    <Header />\r\n                    <Switch>\r\n                        <Route path='/' component={HomePage} exact/>\r\n                        <Route path='/converter' component={ConverterPage}/>\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nconst mapStateToProps = ({loading, error, currencies}) => ({loading, error, currencies});\r\nexport default connect(mapStateToProps)(App);","export default class CurrencyDataService {\r\n    constructor() {\r\n        this._apiBase = 'https://www.cbr-xml-daily.ru/daily_json.js';\r\n    }\r\n    async getData() {\r\n        const res = await fetch(this._apiBase);\r\n        if(!res.ok) throw new Error(`Could not fetch data, received ${res.status}`)\r\n        const data = await res.json();\r\n        return this.transformData(data.Valute);\r\n    }\r\n    transformData(data) {\r\n        const dictionary = new Map([\r\n            [\"AUD\", \"Австралийский доллар\"], [\"AZN\", \"Азербайджанский манат\"], [\"USD\", \"Доллар США\"],\r\n            [\"GBP\", \"Фунт стерлингов Соединенного королевства\"], [\"TMT\", \"Новый туркменский манат\"],\r\n            [\"BYN\", \"Белорусский рубль\"], [\"BGN\", \"Болгарский лев\"], [\"BRL\", \"Бразильский реал\"],\r\n            [\"HUF\", \"Венгерский форинт\"], [\"HKD\", \"Гонконгский доллар\"], [\"DKK\", \"Датская крона\"],\r\n            [\"XDR\", \"СДР (специальные права заимствования)\"], [\"EUR\", \"Евро\"], [\"RON\", \"Румынский лей\"],\r\n            [\"CAD\", \"Канадский доллар\"], [\"KGS\", \"Киргизский сом\"], [\"KZT\", \"Казахстанский тенге\"],\r\n            [\"CNY\", \"Китайский юань\"], [\"SGD\", \"Сингапурский доллар\"], [\"ZAR\", \"Южноафриканский рэнд\"],\r\n            [\"MDL\", \"Молдавский лей\"],  [\"INR\", \"Индийская рупия\"], [\"KRW\", \"Вон Республики Корея\"],\r\n            [\"NOK\", \"Норвежская крона\"], [\"AMD\", \"Армянский драм\"], [\"UAH\", \"Украинский гривна\"],\r\n            [\"PLN\", \"Польский злотый\"], [\"CHF\", \"Швейцарский франк\"], [\"SEK\", \"Шведская крона\"],                   \r\n            [\"TJS\", \"Таджикский сомон\"], [\"UZS\", \"Узбекский сум\"], [\"CZK\", \"Чешская крона\"],\r\n            [\"TRY\", \"Турецкая лира\"], [\"JPY\", \"Японская иена\"]\r\n        ]);\r\n        const base = {\r\n            id: 'R00000',\r\n            charCode: 'RUB',\r\n            name: 'Российский рубль',\r\n            value: 1,\r\n            previous: 1,\r\n            base: true,\r\n        };\r\n        const transformedData = Object.values(data).map((item) => {\r\n            return {\r\n                id: item.ID,\r\n                charCode: item.CharCode,\r\n                name: dictionary.get(item.CharCode),\r\n                value: item.Value / item.Nominal,\r\n                previous: item.Previous / item.Nominal,\r\n            }\r\n        });\r\n        transformedData.push(base);\r\n        return transformedData;\r\n    }\r\n}","import App from './App';\r\nexport default App;","import ErrorIndicator from './Error-Indicator';\r\n\r\nexport default ErrorIndicator;","import React from 'react';\r\n\r\nimport './error-indicator.css';\r\n\r\nconst ErrorIndicator = (props) => {\r\n    return (\r\n        <div className=\"error-indicator-frame\">\r\n            <div className='error-indicator'>\r\n                <i className=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>\r\n                <h1>Упс! Что-то пошло не так!</h1>\r\n                <i className='error-code'>({props.error.message})</i>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorIndicator;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport ErrorIndicator from '../Error-Indicator';\r\n\r\nclass ErrorBoundary extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            error: null\r\n        }\r\n    }\r\n    componentDidCatch(error) {\r\n        this.setState({error});\r\n    }\r\n    render() {\r\n        if(this.state.error) return <ErrorIndicator error={this.state.error}/>\r\n        if(this.props.error) return <ErrorIndicator error={this.props.error}/>\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({error}) => ({error});\r\nexport default connect(mapStateToProps)(ErrorBoundary);","const initialState = {\r\n    currencies: [],\r\n    error: false,\r\n    loading: true\r\n}\r\nconst reducer = (state=initialState, action) => {\r\n    switch(action.type) {\r\n        case 'FETCH_CURRENCIES_REQUEST':\r\n            return {\r\n                currencies: [],\r\n                error: false,\r\n                loading: true,\r\n            }\r\n        case 'FETCH_CURRENCIES_SUCCESS':\r\n            return {\r\n                currencies: action.payload,\r\n                error: false,\r\n                loading: false,\r\n            }\r\n        case 'FETCH_CURRENCIES_FAILURE':\r\n            return {\r\n                currencies: [],\r\n                error: action.payload,\r\n                loading: false,\r\n            }\r\n        case 'EDIT_CURRENCIES': {\r\n            return {\r\n                ...state,\r\n                currencies: action.payload\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import {createStore} from 'redux';\r\nimport reducer from './reducer';\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Provider} from 'react-redux';\r\n\r\nimport App from './components/App';\r\nimport ErrorBoundary from './components/Error-boundary';\r\nimport store from './store';\r\n\r\nReactDOM.render(<Provider store={store}>\r\n                    <ErrorBoundary>\r\n                        <App />\r\n                    </ErrorBoundary>\r\n                </Provider>, document.getElementById('root'));"],"sourceRoot":""}